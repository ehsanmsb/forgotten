name: Versioning

on:
  push:
    branches:
      - "main"
    
jobs:
  versioning:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new_version: ${{ steps.commit-pom.outputs.app_version }}
    env:
      commit_message: "bot message"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: semantic versioning action
        id: semantic-versioning
        uses: paulhatch/semantic-version@v5.3.0
        with:
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          version_format: "${major}.${minor}.${patch}"
          bump_each_commit: true
          bump_each_commit_patch_pattern: "fix:"
          search_commit_body: true
          user_format_type: "json"
          enable_prerelease_mode: false
          debug: false
      - name: change version in pom file
        uses: Mudlet/xmlstarlet-action@master
        with:
          args: ed -L -u /_:project/_:version -v ${{ steps.semantic-versioning.outputs.version_tag }} pom.xml
      - name: commit message
        id: message
        run: |
          last_commit_message=$(git log -1 --pretty=%B)
          echo "commit_message=$last_commit_message" >> $GITHUB_ENV
      - name: commit new version
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: ${{ env.commit_message }}
          branch: main
          commit_options: '--amend --no-edit'
          push_options: '--force'
          skip_fetch: true
      - name: create tag from new version
        run: |
          git tag "${{ steps.semantic-versioning.outputs.version_tag }}"
          git push origin "${{ steps.semantic-versioning.outputs.version_tag }}" --force